<UserControl x:Class="MessManagement.WeeklyMenu"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MessManagement"
        mc:Ignorable="d"
        d:DesignHeight="640" d:DesignWidth="852" >
    <UserControl.Resources>
        <Style x:Key="Menu" TargetType="DataGrid">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="Padding" Value="10" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#DDD" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="AlternatingRowBackground" Value="#EEE" />
        </Style>

        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5,5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border Name="dropShadowBorder"  BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                            <GradientStop Color="#22000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--default button highlight-->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--inner drop shadow when pressed / checked-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#333"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#ccc"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#428bca"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#357ebd"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-success" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5cb85c"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#4cae4c"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5bc0de"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#46b8da"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-warning" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#f0ad4e"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#eea236"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-danger" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#d9534f"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#d43f3a"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <DockPanel LastChildFill="False">
        <Menu x:Name="menu" DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Header="_Test Option 1" />
            </MenuItem>
            <MenuItem Header="_About">
                <MenuItem Header="_License" />
                <MenuItem Header="_Contributors" />
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <Label x:Name="label" Content="Created By: Devashish Yadav and Gaurav, Hall-2 IIT Kanpur"/>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <TabControl>
                <TabItem Header="Monday" >
                    <TabControl TabStripPlacement="Left">
                        <TabItem  Header="Breakfast">
                            <Grid Margin="10" KeyboardNavigation.TabNavigation="None">
                                <DataGrid x:Name="Menu00" AutoGenerateColumns="False" CanUserDeleteRows = "True" CanUserAddRows="False" Style="{StaticResource Menu}" Margin="0,56,0,0" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=LostFocus}" Width="300*"/>
                                        <DataGridTextColumn Header="Price" Binding="{Binding Price, UpdateSourceTrigger=LostFocus}" Width="150"/>
                                        <DataGridTemplateColumn Header="" IsReadOnly="True" Width="30*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button x:Name="button_remove" Style="{StaticResource btn-danger}"   Click="button_remove_Click" >
                                                        <Image Source="Resource/Images/VSO_Close_whiteNoHalo_12x_16x.png"  Height="14"  />
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="button00" Style="{StaticResource btn-info}" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="10,17,0,0" Click="button_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Resource/Images/VSO_Add_whiteNoHalo_12x_16x.png"  Height="14" />
                                        <TextBlock xml:space="preserve"> Add</TextBlock>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem  Header="Lunch">
                            <Grid Margin="10" KeyboardNavigation.TabNavigation="None">
                                <DataGrid x:Name="Menu01" AutoGenerateColumns="False" CanUserDeleteRows = "True" CanUserAddRows="False" Style="{StaticResource Menu}" Margin="0,56,0,0" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=LostFocus}" Width="300*"/>
                                        <DataGridTextColumn Header="Price" Binding="{Binding Price, UpdateSourceTrigger=LostFocus}" Width="150"/>
                                        <DataGridTemplateColumn Header="" IsReadOnly="True" Width="30*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button x:Name="button_remove" Style="{StaticResource btn-danger}"   Click="button_remove_Click" >
                                                        <Image Source="Resource/Images/VSO_Close_whiteNoHalo_12x_16x.png"  Height="14"  />
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="button01" Style="{StaticResource btn-info}" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="10,17,0,0" Click="button_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Resource/Images/VSO_Add_whiteNoHalo_12x_16x.png"  Height="14" />
                                        <TextBlock xml:space="preserve"> Add</TextBlock>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem  Header="Dinner">
                            <Grid Margin="10" KeyboardNavigation.TabNavigation="None">
                                <DataGrid x:Name="Menu02" AutoGenerateColumns="False" CanUserDeleteRows = "True" CanUserAddRows="False" Style="{StaticResource Menu}" Margin="0,56,0,0" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=LostFocus}" Width="300*"/>
                                        <DataGridTextColumn Header="Price" Binding="{Binding Price, UpdateSourceTrigger=LostFocus}" Width="150"/>
                                        <DataGridTemplateColumn Header="" IsReadOnly="True" Width="30*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button x:Name="button_remove" Style="{StaticResource btn-danger}"   Click="button_remove_Click" >
                                                        <Image Source="Resource/Images/VSO_Close_whiteNoHalo_12x_16x.png"  Height="14"  />
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="button02" Style="{StaticResource btn-info}" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="10,17,0,0" Click="button_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Resource/Images/VSO_Add_whiteNoHalo_12x_16x.png"  Height="14" />
                                        <TextBlock xml:space="preserve"> Add</TextBlock>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </TabItem>
            </TabControl>

        </Grid>
    </DockPanel>
</UserControl>
